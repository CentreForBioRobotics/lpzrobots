diff -r ode-0.5/drawstuff/src/drawstuff.cpp ode-0.5_georg/drawstuff/src/drawstuff.cpp
82a83
> 
808,810c809,812
< static Texture *sky_texture = 0;
< static Texture *ground_texture = 0;
< static Texture *wood_texture = 0;
---
> // textures
> static Texture* texture[DS_MAXTEXTURES];
> static int texture_number = 0;
> static char* texture_prefix = 0;
817,821c819,826
<   char *prefix = DEFAULT_PATH_TO_TEXTURES;
<   if (fn->version >= 2 && fn->path_to_textures) prefix = fn->path_to_textures;
<   char *s = (char*) alloca (strlen(prefix) + 20);
< 
<   strcpy (s,prefix);
---
>   texture_prefix = DEFAULT_PATH_TO_TEXTURES;
>   if (fn->version >= 2 && fn->path_to_textures) 
>     texture_prefix = fn->path_to_textures;
>   char *s = (char*) alloca (strlen(texture_prefix) + 20);
>   
>   memset(texture,0,sizeof(Texture*) * DS_MAXTEXTURES);
>   
>   strcpy (s,texture_prefix);
823c828
<   sky_texture = new Texture (s);
---
>   texture[DS_SKY] = new Texture (s);
825c830
<   strcpy (s,prefix);
---
>   strcpy (s,texture_prefix);
827c832
<   ground_texture = new Texture (s);
---
>   texture[DS_GROUND] = new Texture (s);
829c834
<   strcpy (s,prefix);
---
>   strcpy (s,texture_prefix);
831c836,837
<   wood_texture = new Texture (s);
---
>   texture[DS_WOOD] = new Texture (s);
>   texture_number = DS_WOOD+1;
844c850
<    sky_texture = new Texture (s);
---
>    texture[DS_SKY] = new Texture (s);
848c854
<    ground_texture = new Texture (s);
---
>    texture[DS_GROUND] = new Texture (s);
852c858,859
<    wood_texture = new Texture (s);
---
>    texture[DS_WOOD] =  = new Texture (s);
>    texture_number = DS_WOOD+1;
860,865c867,871
<   delete sky_texture;
<   delete ground_texture;
<   delete wood_texture;
<   sky_texture = 0;
<   ground_texture = 0;
<   wood_texture = 0;
---
>   for(int i=0; i < texture_number; i++){
>     if(texture[i]) delete texture[i];
>     texture[i]=0;
>   }
>   texture_number=0;
874c880
<     sky_texture->bind (0);
---
>     texture[DS_SKY]->bind (0);
923c929
<     ground_texture->bind (0);
---
>     texture[DS_GROUND]->bind (0);
1122c1128
<   if (tnum) {
---
>   if (tnum > 0 && tnum < texture_number ) {
1125c1131
<       wood_texture->bind (1);
---
>       texture[tnum]->bind (1);
1159c1165
<     ground_texture->bind (1);
---
>     texture[DS_GROUND]->bind(1);
1239c1245
< extern "C" void dsSetTexture (int texture_number)
---
> extern "C" void dsSetTexture (int texture_index)
1242c1248,1270
<   tnum = texture_number;
---
>   if(texture_index < texture_number && texture_index >= 0)
>     tnum = texture_index;
>   else
>     tnum = 0;
> }
> 
> extern "C" int dsRegisterTexture (const char* filename)
> {
>   if (!texture_prefix) dsError ("No texture prefix defined");
>   if(texture_number == DS_MAXTEXTURES) 
>     dsError ("try to register too many textures");
>   char *s = (char*) alloca (strlen(texture_prefix) + strlen(filename) + 3);
>   
>   strcpy (s, texture_prefix);
> #ifndef macintosh
>   strcat (s, "/");
> #else
>   strcat (s, ":");
> #endif
>   strcat (s, filename);
>   texture[texture_number] = new Texture (s);
>   texture_number++;
>   return (texture_number-1);
1306c1334
<       ground_texture->bind (1);
---
>       texture[DS_GROUND]->bind(1);
diff -r ode-0.5/include/drawstuff/drawstuff.h ode-0.5_georg/include/drawstuff/drawstuff.h
56c56,59
< #define DS_WOOD   1
---
> #define DS_SKY    1
> #define DS_GROUND 2
> #define DS_WOOD   3
> #define DS_MAXTEXTURES 128
104a108,112
> /* Registers a user defined texture and returns its number. This can be used 
>  * as parameter to dsSetTexture()   
>  */
> int dsRegisterTexture (const char* filename);
> 
106,110c114,119
<  * dsDrawXXX() functions. the texture number must be a DS_xxx texture
<  * constant. the red, green, and blue number are between 0 and 1.
<  * alpha is between 0 and 1 - if alpha is not specified it's assubed to be 1.
<  * the current texture is colored according to the current color.
<  * at the start of each frame, the texture is reset to none and the color is
---
>  * dsDrawXXX() functions. The texture number must be either a DS_xxx texture
>  * constant or an integer returned by dsRegisterTexture(). 
>  * The red, green, and blue number are between 0 and 1.
>  * alpha is between 0 and 1 - if alpha is not specified it's assumed to be 1.
>  * The current texture is colored according to the current color.
>  * At the start of each frame, the texture is reset to none and the color is
