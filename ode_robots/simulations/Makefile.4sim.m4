# -*- mode: makefile; -*-
# Do not edit, this is file generated by m4 from Makefile.4sim.m4 and 
#  copied to the simulations while installation! 
# Make your changes in Makefile.conf.
#  E.g. add there files to compile or custom libs and so on.

# File:       Makefile for lpzrobots simulations
# Author:     Georg Martius  <georg.martius at web.de>
# Date:       Oct 2009

define(`COMMENT', )
COMMENT(`There are defines for platform dependend stuff.
         DEV only produces output in the development version
         DEVORUSER  choice between development (first argument) or user (second)
         LINUXORMAC outputs the first argument on linux and the second on mac.')

ifdef(`DEVEL',
`define(`DEVORUSER', $1) define(`DEV', $1)'
,
`define(`DEVORUSER', $2) define(`DEV',)'
)
ifdef(`MAC', 
`define(`LINUXORMAC', $2)'
,
`define(`LINUXORMAC', $1)'
)

EXEC = start
# add files to compile in the conf file
include Makefile.conf

EXEC_OPT  = $(EXEC)_opt
EXEC_DBG  = $(EXEC)_dbg

CFILES = $(addsuffix .cpp, $(FILES))
OFILES = $(addsuffix .o, $(FILES))

ODEROBOTSLIB := ode_robots
ODEROBOTSLIB_DBG := ode_robots_dbg
ODEROBOTSLIB_OPT := ode_robots_opt
DEV(LIBODEROBOTS = $(ODEROBOTS)/lib$(ODEROBOTSLIB).a)

SELFORGLIB = selforg
SELFORGLIB_DBG = selforg_dbg
SELFORGLIB_OPT = selforg_opt
DEV(LIBSELFORG      = $(SELFORG)/lib$(SELFORGLIB).a)

ODELIBS = $(shell ode-dbl-config --libs)
GSLLIBS = $(shell gsl-config --libs)
STATICSTART=-Wl,-Bstatic
STATICEND=-Wl,-Bdynamic

LIBS  += -lm \
	DEV(-L$(ODEROBOTS) -L$(SELFORG)) \
	 $(STATICSTART) -l$(ODEROBOTSLIB) -l$(SELFORGLIB) $(STATICEND) \
	-Wl,-Bstatic -l$(ODEROBOTSLIB) -l$(SELFORGLIB) -Wl,-Bdynamic \
	 $(ODELIBS) $(GSLLIBS) \
	-losgShadow -losgText -losgUtil -losgViewer -losgGA -lOpenThreads -losg -lGL -lGLU -lglut \
	-lreadline -lncurses -lpthread $(ADDITIONAL_LIBS)

INC   += -I. DEV(-I$(ODEROBOTS)/include -I$(SELFORG)/include) LINUXORMAC(,-I/opt/local/include
)

CXX = g++
ODEFLAGS = $(shell ode-dbl-config --cflags)
CPPBASEFLAGS = $(ODEFLAGS) -pthread $(INC) -Wno-deprecated -Wall
# -pg for profiling
CPPFLAGS = $(CPPBASEFLAGS) -g -O1
## Optimisation
CPPFLAGS_DBG = $(CPPBASEFLAGS) -g
## Optimisation
CPPFLAGS_OPT = $(CPPBASEFLAGS) -O3 -DNDEBUG

normal: DEV(libode_robots) 
	$(MAKE) $(EXEC)
opt:    DEV(libode_robots_opt) 
	$(MAKE) ODEROBOTSLIB="$(ODEROBOTSLIB_OPT)" SELFORGLIB="$(SELFORGLIB_OPT)" CPPFLAGS="$(CPPFLAGS_OPT)" $(EXEC_OPT)
dbg:    DEV(libode_robots_dbg) 
	$(MAKE) ODEROBOTSLIB="$(ODEROBOTSLIB_DBG)" SELFORGLIB="$(SELFORGLIB_DBG)" CPPFLAGS="$(CPPFLAGS_DBG)" $(EXEC_DBG)
shared:  DEV(libode_robots_shared) 
	$(MAKE) STATICSTART="" STATICEND="" $(EXEC)


$(EXEC): Makefile Makefile.depend $(OFILES) DEV($(LIBODEROBOTS) $(LIBSELFORG))
	$(CXX) $(CPPFLAGS) $(OFILES) $(LIBS) -o $(EXEC)

$(EXEC_OPT): Makefile Makefile.depend $(OFILES) DEV($(LIBODEROBOTS) $(LIBSELFORG))
	$(CXX) $(CPPFLAGS) $(OFILES) $(LIBS) -o $(EXEC_OPT)

$(EXEC_DBG): Makefile Makefile.depend $(OFILES) DEV($(LIBODEROBOTS) $(LIBSELFORG))
	$(CXX) $(CPPFLAGS) $(OFILES) $(LIBS) -o $(EXEC_DBG)


DEV(
libode_robots:	
	cd $(ODEROBOTS) && $(MAKE) lib

libode_robots_dbg:	
	cd $(ODEROBOTS) && $(MAKE) dbg

libode_robots_opt:	
	cd $(ODEROBOTS) && $(MAKE) opt

libode_robots_shared:	
	cd $(ODEROBOTS) && $(MAKE) shared

)

Makefile.depend: 
	makedepend $(CFLAGS) $(INC) $(CFILES) -f- > Makefile.depend 2>/dev/null

depend: 
	makedepend $(CFLAGS) $(INC) $(CFILES)  -f- > Makefile.depend 2>/dev/null

tags: 
	etags $(find -name "*.[ch]")

DEV(
cleandist: clean-all
clean-all: clean
	cd $(ODEROBOTS) && make clean-all
	cd $(SELFORG) && make clean-all
)

clean:
	rm -f $(EXEC) $(EXEC_DBG) $(EXEC_OPT) *.o Makefile.depend

-include Makefile.depend
