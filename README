/** \file
 * This file is used for the doxygen documentation. 
 */


/** \mainpage Documentation of lpzrobots

\par Organization:
	University Leipzig \n
	Institute for Computer Science  \n
	Dept. Intelligent Systems \n
	Prof. Dr.  Ralf Der \n
        Research Group Neuroinformatics und Robotic

\par People:
Ralf Der, Georg Martius, Frank Hesse, Rene Liebscher, 
Marcel Kretschmann, Dominic Schneider, Claus Stadler, 
Frank Güttler
 
\section General

This is a collection of algorithms, simulations, and tools 
developed by the robot group of the University Leipzig \n
(http://robot.informatik.uni-leipzig.de).
It consists of the following directories (click for details):
  - \ref selforg : controllers together with a small framework for using them,
	developed in the robotic group of Leipzig university
	yielding at self-organized behaviour for various kinds of machines. 
  - \ref ode_robots : stuff needed for our ODE-simulations 
	(Open Dynamics Engine, see http://www.ode.org) such as robots, 
 	obstacles, utils, our patches and stuff for visualization with OSG 
        (OpenSceneGraph, see http://www.openscenegraph.org)
  - \ref matrixlib : comfortable matrix library used for calculations e.g. in our controllers
  - \ref guilogger : application that coordinates multiple gnuplot 
	windows and switches channels on or of, data is sent per pipe from your program 


\section Requirements
 
You need the following software and libraries installed (Tested on Linux x86 machines)
- ODE see http://www.ode.org and augmented with our 
\ref ode_robots/ode_patches "patches"
- OpenSceneGraph http://www.openscenegraph.org (version >= 0.9.8) 
  (Debian includes it in Etch (Testing) and higher)
- Qt library from http://www.trolltech.com for guilogger (version > 3.0)
- avr-gcc and avr-binutils. \n
   SuSE packages under: http://robot.informatik.uni-leipzig.de/software/\n
   Debian includes them in Etch (Testing)  and higher
 
\section Inst Installation & Startup

- Download source tar ball from 
  http://robot.informatik.uni-leipzig.de/software .
- Unpack file.
- Change into <tt> lpzrobots </tt> directory
- Call <tt> make </tt> to compile \ref matrixlib and \ref guilogger (not strictly necessary,
  only for displaying parameters online)
- Call <tt> make install </tt> to copy <tt> guilogger/bin/guilogger </tt> into the 
  <tt>/bin</tt> folder of your home directory. (If this does not work copy by hand.)
- To start a simulation go into that simulation directory, call <tt>make</tt> and 
  <tt>start</tt>.
  For example when you want to start the template_onerobot simulation type
  <tt>cd ode_robots/simulations/template_onerobot</tt>, then call <tt>make</tt> and after
  successful compilation type <tt>start</tt> to start the simulation
- The following command line options are available 
  (type start -h for the display of this options): \n
  Usage: start [-g] [-l] [-r SEED] [-x WxH] [-pause] [-notex] [-noshadow] [-h]\n
        \c -g      	use guilogger\n
        \c -l      	use guilogger with logfile\n
        \c -r \c SEED   use SEED as random number seed\n
        \c -x \c WxH    window size of width(W) x height(H) is used (640x480 default)\n
        \c -pause       start in pause mode\n
        \c -notex       do not display textures\n
        \c -noshadow    do not display shadows\n
	\c -h 		display this help
- Have a look at the console after starting the program, 
  there you will find some further information for the usage of the program.
- For starting your own simulation see paragraph "How to Start Your Own Simulation" 
  in \ref ode_robots .
- For a well documented examples of a main.cpp of a simulation and a robot .cpp file click 
  the tab "Examples" at the top of this page.


\section Documentation

- This manual can be found at http://robot.informatik.uni-leipzig.de/software
- More informations on the used self-organization algorithm is available at  
  http://robot.informatik.uni-leipzig.de/research
- The ODE tutorial of Marcel Kretschmann can be found at 
  http://robot.informatik.uni-leipzig.de/students \n
  (Tar ball with pdf and example code also there available.)
- The original ODE documentation can be found at http://www.ode.org/ode-docs.html 
- The OSG documentation can be found at  http://www.openscenegraph.org/osgwiki/pmwiki.php/Documentation/Documentation


*/
